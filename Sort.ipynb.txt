{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sorted Array : [1, 2, 5, 7, 9]\n"
     ]
    }
   ],
   "source": [
    "def selection_sort(lst):\n",
    "    for i in range(len(lst)-1): #iterate through each element of lst\n",
    "        min_index=i\n",
    "        #compare that element with all other elements\n",
    "        for j in range(i+1,len(lst)):\n",
    "            #if we find any minimum value then swap\n",
    "            if lst[min_index] > lst[j]:\n",
    "                lst[min_index],lst[j] = lst[j],lst[min_index]\n",
    "    print(\"Sorted Array :\",lst)\n",
    "selection_sort([2,9,5,7,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sorted Array : [1, 2, 5, 7, 9]\n"
     ]
    }
   ],
   "source": [
    "def bubble_sort(lst):\n",
    "    for i in range(len(lst)): #iterate through each element of lst\n",
    "        for j in range(0,len(lst)-i-1):\n",
    "            #itakes a bubble of two elements and swap the largest to its position\n",
    "            if lst[j] > lst[j+1]:\n",
    "                lst[j+1],lst[j] = lst[j],lst[j+1]\n",
    "    print(\"Sorted Array :\",lst)\n",
    "bubble_sort([2,9,5,7,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sorted Array : [1, 2, 5, 7, 9]\n"
     ]
    }
   ],
   "source": [
    "def insertion_sort(lst):\n",
    "    for i in range(1,len(lst)):\n",
    "        key = lst[i]\n",
    "        j=i-1\n",
    "        while j>=0 and lst[j]>key:\n",
    "            lst[j+1]=lst[j]\n",
    "            j-=1\n",
    "        lst[j+1] = key\n",
    "    print(\"Sorted Array :\",lst)\n",
    "insertion_sort([2,9,5,7,1])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
